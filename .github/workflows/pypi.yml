name: 'Package Publish'
on: 
  push:
  pull_request:

jobs: 
  packagepublish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 100

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install lint
        shell: bash
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
          if [ ! -f "commitlint.config.js" ]; then
            echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js
          fi        

      - name: Lint Commit Message
        if: github.event_name == 'push'
        shell: bash
        run: commitlint --from=HEAD~2 --verbose || true

      - name: Lint Pull Request
        if: github.event_name == 'pull_request'
        shell: bash
        run: commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build twine        

      - name: Get Current Version
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.1

      - name: Setup Version
        env:
          TAG: ${{ steps.previoustag.outputs.tag }}
        run: |
          sed -i "s/version = .*/version = \"$TAG\"/g" pyproject.toml
          cat pyproject.toml        

      - name: Build package
        run: python -m build

      - name: Publish package
        if: github.ref_name == 'main'
        run: |
          python -m twine upload dist/* --non-interactive -u__token__ -p${{ secrets.PYPI_TOKEN }}
